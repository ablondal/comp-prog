import math

# get number of permutations greater
def G(n):
	k = len(n)
	if k == 1:
		return 0
	return G(n[1:]) + (S(n)* math.factorial(k-1))

def S(n):
	count = 0
	for x in n[1:]:
		if x>n[0]:
			count +=1
	return count

# geometric series sum
def P(r, k):
	infsum = r/(r-1)
	return infsum-1-(infsum*(1/r)**(k+1))

T = int(input())

for cases in range(T):
	n = list(input())
	k = G(n)
	r = math.factorial(len(n))
	print(k, P(r, k))